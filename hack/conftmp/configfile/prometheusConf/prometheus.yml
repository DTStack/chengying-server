# my global config
global:
  scrape_interval:     30s
  evaluation_interval: 1m
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - /prometheus/rules/*

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'host_node_exporter'
    file_sd_configs:
    - files: ['/prometheus/node_sd_file.yml']
      refresh_interval: 1m
  - job_name: 'host_em_service'
    file_sd_configs:
    - files: ['/prometheus/service_sd_file.yml']
      refresh_interval: 30s
  - job_name: 'kube_em_service'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
          - {{.NameSpace}}
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__,__meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::[0-9]+)?;([0-9]+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name 
  - job_name: 'promtail'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
          - {{.NameSpace}}
    relabel_configs:
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape,__meta_kubernetes_pod_container_name ]
      action: keep
      regex: true;promtail
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::[0-9]+)?;([0-9]+)
      replacement: $1:3101
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [ __meta_kubernetes_namespace ]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [ __meta_kubernetes_service_name ]
      action: replace
      target_label: kubernetes_name
    - source_labels: [ __meta_kubernetes_pod_name ]
      action: replace
      target_label: kubernetes_pod_name
    - target_label: service_name
      replacement: promtail
      source_labels: [ service_name ]
      action: replace
    - target_label: service_version
      replacement: dt-2.1.0
      source_labels: [ service_version ]
      action: replace
